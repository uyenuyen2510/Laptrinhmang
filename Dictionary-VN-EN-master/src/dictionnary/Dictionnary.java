/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author nthan
 */

package dictionnary;
import java.awt.event.KeyEvent;
import java.io.File;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.swing.DefaultListModel;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
public class Dictionnary extends javax.swing.JFrame {
    
    
    final static int EN_VN = 1; // translate from English to Vietnamese
    final static int VN_EN = 2; //translate from Vietnamese to English
    static int Translation = 1; // 
    static String KeyWord = "";
    static ProcessWord Obj;
    /**
     * Creates new form Dictionnary
     */
    public Dictionnary() {
        initComponents();
        setTitle("Dictionnary");
        setResizable(false);
        // override luu ky tu yeu thich xuong file trong qua trinh windows dang tat
        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                Obj.SaveFileListWordLove();
                Obj.SaveHistory();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pn_backroud = new javax.swing.JPanel();
        tf_KeyWord = new javax.swing.JTextField();
        btn_Search = new javax.swing.JButton();
        cb_SelectLanguage = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textarea_trans = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        btn_listwordlike = new javax.swing.JButton();
        btn_listwordunlike = new javax.swing.JButton();
        btn_Statistical = new javax.swing.JButton();
        check_like = new javax.swing.JCheckBox();
        check_dislike = new javax.swing.JCheckBox();
        check_popular = new javax.swing.JCheckBox();
        btn_listsimilar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        list_Suggest = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        cutMenuItem = new javax.swing.JMenuItem();
        copyMenuItem = new javax.swing.JMenuItem();
        pasteMenuItem = new javax.swing.JMenuItem();
        deleteMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentsMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 0, 255));

        tf_KeyWord.setToolTipText("Enter your word");
        tf_KeyWord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_KeyWordActionPerformed(evt);
            }
        });
        tf_KeyWord.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tf_KeyWordKeyReleased(evt);
            }
        });
        tf_KeyWord.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                tf_KeyWordVetoableChange(evt);
            }
        });

        btn_Search.setText("Translate");
        btn_Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SearchActionPerformed(evt);
            }
        });

        cb_SelectLanguage.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "English-Vietnamese", "Vietnamese - English" }));
        cb_SelectLanguage.setName("cb_select"); // NOI18N
        cb_SelectLanguage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_SelectLanguageActionPerformed(evt);
            }
        });

        textarea_trans.setEditable(false);
        textarea_trans.setColumns(20);
        textarea_trans.setRows(5);
        jScrollPane1.setViewportView(textarea_trans);

        btn_listwordlike.setText("Favorite word list");
        btn_listwordlike.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_listwordlikeActionPerformed(evt);
            }
        });

        btn_listwordunlike.setText("UnFavorite word list");
        btn_listwordunlike.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_listwordunlikeActionPerformed(evt);
            }
        });

        btn_Statistical.setText(" Statistical");
        btn_Statistical.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_StatisticalActionPerformed(evt);
            }
        });

        check_like.setText("like");
        check_like.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                check_likeActionPerformed(evt);
            }
        });

        check_dislike.setText("dislike");
        check_dislike.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                check_dislikeActionPerformed(evt);
            }
        });

        check_popular.setText("popular");
        check_popular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                check_popularActionPerformed(evt);
            }
        });

        btn_listsimilar.setText("Comom words");
        btn_listsimilar.setActionCommand("");
        btn_listsimilar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_listsimilarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btn_listwordlike, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btn_listwordunlike, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btn_Statistical, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(check_like)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(check_dislike)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(check_popular)
                .addGap(0, 6, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(btn_listsimilar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(check_like)
                    .addComponent(check_dislike)
                    .addComponent(check_popular))
                .addGap(33, 33, 33)
                .addComponent(btn_listwordlike)
                .addGap(67, 67, 67)
                .addComponent(btn_listwordunlike)
                .addGap(67, 67, 67)
                .addComponent(btn_listsimilar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addComponent(btn_Statistical)
                .addGap(41, 41, 41))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        list_Suggest.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                list_SuggestMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(list_Suggest);

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Suggest");

        javax.swing.GroupLayout pn_backroudLayout = new javax.swing.GroupLayout(pn_backroud);
        pn_backroud.setLayout(pn_backroudLayout);
        pn_backroudLayout.setHorizontalGroup(
            pn_backroudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_backroudLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pn_backroudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cb_SelectLanguage, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pn_backroudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)))
                .addGap(9, 9, 9)
                .addGroup(pn_backroudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pn_backroudLayout.createSequentialGroup()
                        .addComponent(tf_KeyWord, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(btn_Search, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pn_backroudLayout.setVerticalGroup(
            pn_backroudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_backroudLayout.createSequentialGroup()
                .addGroup(pn_backroudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_KeyWord, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Search, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_SelectLanguage, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(pn_backroudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_backroudLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        jLabel1.setBackground(new java.awt.Color(51, 255, 51));
        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("DICTIONNARY");

        fileMenu.setMnemonic('f');
        fileMenu.setText("File");

        openMenuItem.setMnemonic('o');
        openMenuItem.setText("Open");
        fileMenu.add(openMenuItem);

        saveMenuItem.setMnemonic('s');
        saveMenuItem.setText("Save");
        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setMnemonic('a');
        saveAsMenuItem.setText("Save As ...");
        saveAsMenuItem.setDisplayedMnemonicIndex(5);
        fileMenu.add(saveAsMenuItem);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        editMenu.setMnemonic('e');
        editMenu.setText("Edit");

        cutMenuItem.setMnemonic('t');
        cutMenuItem.setText("Cut");
        editMenu.add(cutMenuItem);

        copyMenuItem.setMnemonic('y');
        copyMenuItem.setText("Copy");
        editMenu.add(copyMenuItem);

        pasteMenuItem.setMnemonic('p');
        pasteMenuItem.setText("Paste");
        editMenu.add(pasteMenuItem);

        deleteMenuItem.setMnemonic('d');
        deleteMenuItem.setText("Delete");
        editMenu.add(deleteMenuItem);

        menuBar.add(editMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");

        contentsMenuItem.setMnemonic('c');
        contentsMenuItem.setText("Contents");
        helpMenu.add(contentsMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pn_backroud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pn_backroud, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(22, 22, 22))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void cb_SelectLanguageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_SelectLanguageActionPerformed
        if(cb_SelectLanguage.getSelectedItem().toString() == "English-Vietnamese"){
            Translation = 1;
        }
            if(cb_SelectLanguage.getSelectedItem().toString() == "Vietnamese - English"){
                Translation = 2;
            }
    }//GEN-LAST:event_cb_SelectLanguageActionPerformed

    private void tf_KeyWordVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_tf_KeyWordVetoableChange
        
    }//GEN-LAST:event_tf_KeyWordVetoableChange

    private void btn_SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SearchActionPerformed
         DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd");
         LocalDate localDate = LocalDate.now();
        // Reset CHECKBOX
        check_like.setSelected(false);
        check_dislike.setSelected(false);
        check_popular.setSelected(false);
        // Search KeyWOrd
        KeyWord = tf_KeyWord.getText();
        if(Translation == 1){
            Meanings tempEN_VN =  Obj.LookUpEN_VN(KeyWord);
            if(tempEN_VN != null){
            textarea_trans.setText(tempEN_VN.getPronunciation() + "\n" 
                    + "--------------------------------------------------" + "\n"
                    + "* " + tempEN_VN.getAttribute() + "\n"
                    + tempEN_VN.getlistWordtrans());
            // save history search
            History temp = new History();
            temp.setKey(KeyWord);
            temp.setDay(localDate.getDayOfMonth());
            temp.setMonth(localDate.getMonth().getValue());
            temp.setYear(localDate.getYear());
            Obj.historyEN.add(temp);
            }
            else
            textarea_trans.setText("Nofound!!!");
        }
        else if(Translation == 2){
            Meanings tempVN_EN = Obj.lookUpVn_EN(KeyWord);
            if(tempVN_EN != null){
                 textarea_trans.setText(tempVN_EN.getPronunciation() + "\n" 
                    + "--------------------------------------------------" + "\n"
                    + "* " + tempVN_EN.getAttribute() + "\n"
                    + tempVN_EN.getlistWordtrans());
            // save History search
            History temp = new History();
            temp.setKey(KeyWord);
            temp.setDay(localDate.getDayOfMonth());
            temp.setMonth(localDate.getMonth().getValue());
            temp.setYear(localDate.getYear());
            Obj.historyVN.add(temp);
            }
            else
            textarea_trans.setText("Nofound!!!");
        }    
        else{}
        
        // Check Other KeyWord EN
        if(Translation == 1){
            for(int i = 0; i < Obj.listWordOther.size(); i++){
                if(KeyWord.equals(Obj.listWordOther.get(i).getKey())){
                    if(Obj.listWordOther.get(i).getLike() == true){
                        check_like.setSelected(true);
                    }
                    if(Obj.listWordOther.get(i).getDislike() == true){;
                        check_dislike.setSelected(true);
                    }
                    if(Obj.listWordOther.get(i).getPopular() == true){
                        check_popular.setSelected(true);
                    }
                }
            }
        }
        //---------------------------------------------------------------------
        //CHECK OTHER KEY WORD
        if(Translation == 2){
            for(int i = 0; i < Obj.listWordOther_VN.size(); i++){
                if(KeyWord.equals(Obj.listWordOther_VN.get(i).getKey())){
                    if(Obj.listWordOther_VN.get(i).getLike() == true){
                        check_like.setSelected(true);
                    }
                    else{
                        check_dislike.setSelected(true);
                    }
                    if(Obj.listWordOther_VN.get(i).getPopular() == true){
                        check_popular.setSelected(true);
                    }
                }
            }  
        }
        //---------------------------------------------------------------------

    }//GEN-LAST:event_btn_SearchActionPerformed

    private void check_likeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_check_likeActionPerformed
        check_dislike.setSelected(false);
        check_like.setSelected(true);;
        Obj.CheckLike(KeyWord);
    }//GEN-LAST:event_check_likeActionPerformed

    private void check_dislikeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_check_dislikeActionPerformed
        check_dislike.setSelected(true);
        check_like.setSelected(false);
        Obj.CheckDisLike(KeyWord);
    }//GEN-LAST:event_check_dislikeActionPerformed

    private void check_popularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_check_popularActionPerformed
        Obj.checkPopular(KeyWord, check_popular.isSelected());
    }//GEN-LAST:event_check_popularActionPerformed

    private void btn_listwordlikeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_listwordlikeActionPerformed
       textarea_trans.setText("");
       String temp;
       // TRANS = 1: EN - VN
       if(Translation == 1){
           for(int i = 0; i < Obj.listWordOther.size(); i++){
               if(Obj.listWordOther.get(i).getLike() == true){
                   temp = "";
                   temp += Obj.listWordOther.get(i).getKey() + "\n";
                   if(Obj.listEn_Vn.get(Obj.listWordOther.get(i).getKey()) != null){
                       temp += Obj.listEn_Vn.get(Obj.listWordOther.get(i).getKey()).getlistWordtrans();
                       temp += "\n----------------------------------------------------\n";
                       textarea_trans.append(temp);
                   }
                   else temp = "";
               }
           } 
       }
       // TRANS = 2: VN - EN
       if(Translation == 2){
           for(int i = 0; i < Obj.listWordOther_VN.size(); i++){
               if(Obj.listWordOther_VN.get(i).getLike() == true){
                   temp = "";
                   temp += Obj.listWordOther_VN.get(i).getKey() + "\n";
                   if(Obj.listVn_En.get(Obj.listWordOther_VN.get(i).getKey()) != null){
                      temp += Obj.listVn_En.get(Obj.listWordOther_VN.get(i).getKey()).getlistWordtrans();
                      temp += "\n----------------------------------------------------\n";
                      textarea_trans.append(temp);
                   }
               }
           }
       }
    }//GEN-LAST:event_btn_listwordlikeActionPerformed

    private void btn_listwordunlikeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_listwordunlikeActionPerformed
        textarea_trans.setText("");
        String temp;
        //TRANS = 1: EN = VN
        if(Translation == 1){
            for(int i = 0; i < Obj.listWordOther.size(); i++){
                if(Obj.listWordOther.get(i).getDislike() == true){
                    temp = "";
                    temp += Obj.listWordOther.get(i).getKey() + "\n";
                    if(Obj.listEn_Vn.get(Obj.listWordOther.get(i).getKey()) != null){
                         temp += Obj.listEn_Vn.get(Obj.listWordOther.get(i).getKey()).getlistWordtrans();
                         temp += "\n----------------------------------------------------\n";
                          textarea_trans.append(temp);
                    }
                    else temp = "";
                }
            }
        }
        // TRANS = 2: VN - EN
        if(Translation == 2){
            for(int i = 0; i< Obj.listWordOther_VN.size(); i++){
                if(Obj.listWordOther_VN.get(i).getDislike() == true){
                    temp ="";
                    temp += Obj.listWordOther_VN.get(i).getKey();
                    System.out.println(Obj.listWordOther_VN.get(i).getKey());
                    if(Obj.listVn_En.get(Obj.listWordOther_VN.get(i).getKey()) != null){
                        temp += Obj.listVn_En.get(Obj.listWordOther_VN.get(i).getKey()).getlistWordtrans();
                        temp += "\n----------------------------------------------------\n";
                    textarea_trans.append(temp);
                    }
                    else temp = "";
                }
            }
        }
    }//GEN-LAST:event_btn_listwordunlikeActionPerformed

    private void btn_listsimilarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_listsimilarActionPerformed
        textarea_trans.setText("");
        String temp;
        // TRANS = 1: EN - VN
        if(Translation == 1){
            for(int i = 0; i < Obj.listWordOther.size(); i++){
                if(Obj.listWordOther.get(i).getPopular()== true){
                    temp = "";
                    temp += Obj.listWordOther.get(i).getKey() + "\n";
                    if(Obj.listEn_Vn.get(Obj.listWordOther.get(i).getKey()) != null){
                         temp += Obj.listEn_Vn.get(Obj.listWordOther.get(i).getKey()).getlistWordtrans();
                         temp += "\n----------------------------------------------------\n";
                          textarea_trans.append(temp);
                    }
                    else temp = "";
                }
            }
        }
        // TRANS = 2: VN - EN
        if(Translation == 2){
            for(int i = 0; i< Obj.listWordOther_VN.size(); i++){
                if(Obj.listWordOther_VN.get(i).getPopular()== true){
                    temp ="";
                    temp += Obj.listWordOther_VN.get(i).getKey();
                    System.out.println(Obj.listWordOther_VN.get(i).getKey());
                    if(Obj.listVn_En.get(Obj.listWordOther_VN.get(i).getKey()) != null){
                        temp += Obj.listVn_En.get(Obj.listWordOther_VN.get(i).getKey()).getlistWordtrans();
                        temp += "\n----------------------------------------------------\n";
                    textarea_trans.append(temp);
                    }
                    else temp = "";
                }
            }
        }   
    }//GEN-LAST:event_btn_listsimilarActionPerformed

    private void btn_StatisticalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_StatisticalActionPerformed
        new Thread (new Runnable() {
            @Override
            public void run() {
                try {
                    Statistical statis = new Statistical();
                    statis.setVisible(true);     
                }
                catch (Exception e) {
                }
            }
        }).start();
    }//GEN-LAST:event_btn_StatisticalActionPerformed

    private void tf_KeyWordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_KeyWordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_KeyWordActionPerformed

    private void tf_KeyWordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_KeyWordKeyReleased
        
    // Proc Enter
        KeyWord = tf_KeyWord.getText();
    if(evt.getKeyCode() == KeyEvent.VK_ENTER){
        btn_SearchActionPerformed(new java.awt.event.ActionEvent(btn_Search,0,""));
    }
      //  System.out.println(tf_KeyWord.getText());
    
    
    // EN - VN
    if(Translation == 1){
        list_Suggest.clearSelection();
        int count = 0;
        DefaultListModel listModel = new DefaultListModel();
        for(int i = 0; i < ProcessWord.listKey_EN_VN.size(); i++){
            if(ProcessWord.listKey_EN_VN.get(i).startsWith(KeyWord) == true){
                listModel.addElement(ProcessWord.listKey_EN_VN.get(i));
            }
        }
        list_Suggest.setModel(listModel);
    }
    //VN - EN
    if(Translation == 2){
        list_Suggest.clearSelection();
        int count = 0;
        DefaultListModel listModel = new DefaultListModel();
        for(int i = 0; i < ProcessWord.listKey_VN_EN.size(); i++){
            if(ProcessWord.listKey_VN_EN.get(i).startsWith(KeyWord) == true){
                listModel.addElement(ProcessWord.listKey_VN_EN.get(i));
            }
        }
        list_Suggest.setModel(listModel);
    }
    }//GEN-LAST:event_tf_KeyWordKeyReleased

    private void list_SuggestMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_list_SuggestMouseClicked
        KeyWord = list_Suggest.getModel().getElementAt(list_Suggest.getSelectionModel().getAnchorSelectionIndex());
        tf_KeyWord.setText(KeyWord);
        btn_SearchActionPerformed(new java.awt.event.ActionEvent(btn_Search,0,""));
    }//GEN-LAST:event_list_SuggestMouseClicked

    
     
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dictionnary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dictionnary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dictionnary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dictionnary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Dictionnary().setVisible(true);
                Obj = new ProcessWord();
                Obj.ReadFile_EN_VN();
                Obj.ReadFileVN_EN();
                Obj.ReadFileListWordLove();
                Obj.ReadFileHistory();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JButton btn_Search;
    private javax.swing.JButton btn_Statistical;
    private javax.swing.JButton btn_listsimilar;
    private javax.swing.JButton btn_listwordlike;
    private javax.swing.JButton btn_listwordunlike;
    private javax.swing.JComboBox<String> cb_SelectLanguage;
    private javax.swing.JCheckBox check_dislike;
    private javax.swing.JCheckBox check_like;
    private javax.swing.JCheckBox check_popular;
    private javax.swing.JMenuItem contentsMenuItem;
    private javax.swing.JMenuItem copyMenuItem;
    private javax.swing.JMenuItem cutMenuItem;
    private javax.swing.JMenuItem deleteMenuItem;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> list_Suggest;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JMenuItem pasteMenuItem;
    private javax.swing.JPanel pn_backroud;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JTextArea textarea_trans;
    private javax.swing.JTextField tf_KeyWord;
    // End of variables declaration//GEN-END:variables

}
